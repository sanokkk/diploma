version: '3.9'

networks:
  mynetwork:
    driver: bridge

services:
  #postgres config
  postgres:
    image: postgres:latest
    networks:
      - mynetwork
    volumes:
      - ./data/postgres:/var/lib/postgres
    environment:
      - POSTGRES_DB=Diploma
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admax
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -q -U admin -d Diploma"]
      interval: 15s
      timeout: 30s
      retries: 5
      start_period: 15s

  #api config
  api:
    image: apiimage
    build:
      context: /Diploma/src
      dockerfile: ./Dockerfile
    ports:
      - "5000:5010"
    environment:
            - ASPNETCORE_ENVIRONMENT=Local
            - ASPNETCORE_URLS=http://+:5010
    networks:
      - mynetwork
    depends_on:
       postgres:
          condition: service_healthy
       translate:
          condition: service_started
      
        
  
  #prometheus config
  prometheus:
    build: 
      context: /prometheus
      dockerfile: prometheus-dockerfile.yml
    user: root
    depends_on:
      - api
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    networks:
      - mynetwork
  
  #grafana config
  grafana:
    image: grafana/grafana-enterprise
    ports:
      - "3001:3000"   
    volumes:
      - ./data/grafana:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - mynetwork
  
  #clinet config
  client:
    build: 
      context: /diploma.client.react
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - api
    networks:
      - mynetwork

  #translate config
  translate:
    image: libretranslate/libretranslate
    ports:
      - "5005:5000"
    environment:
      - LT_LOAD_ONLY=en,ru
    networks:
      - mynetwork